import * as React from 'react';
import * as ReactDOM from 'react-dom';
import 'figma-plugin-ds/dist/figma-plugin-ds.css';
import './ui.css';

const rootElement = document.getElementById('plugin-root');

const App = () => {
  const inputRef = React.useRef<HTMLInputElement>();
  const [jsonFile, setJsonFile] = React.useState(null);
  const [selectedCategories, setSelectedCategories] = React.useState(() => new Set());
  const fileLoaderRef = React.useRef<FileReader>(null);
  const submitEnabled = fileLoaderRef.current?.result;
  const fileName = inputRef.current?.files[0]?.name;

  const handleUpload = () => {
    inputRef.current.click();
  };

  const handleParseLoad = React.useCallback((ev: ProgressEvent<FileReader>) => {
    setJsonFile(JSON.parse(ev.target.result as string));
  }, []);

  const handleChangeFile = React.useCallback(
    (event: React.ChangeEvent<HTMLInputElement>) => {
      const { files } = event.target;

      if (files.length === 0) {
        return;
      }

      const reader = (fileLoaderRef.current = new FileReader());
      reader.onabort = () => console.log('file reading was aborted');
      reader.onerror = () => console.log('file reading has failed');
      reader.onload = handleParseLoad;
      reader.readAsBinaryString(files[0]);
    },
    [handleParseLoad],
  );

  const handleSubmit = React.useCallback(
    (event: React.FormEvent<HTMLFormElement>) => {
      event.preventDefault();

      const json = JSON.parse(fileLoaderRef.current.result as string);

      parent.postMessage(
        {
          pluginMessage: {
            type: 'IMPORT_THEME',
            payload: { styles: json, selectedCategories: Array.from(selectedCategories) },
          },
        },
        '*',
      );
    },
    [selectedCategories],
  );

  const handleClearFile = React.useCallback(() => {
    setJsonFile(null);
    inputRef.current.value = '';
    fileLoaderRef.current = null;
  }, []);

  const handleCancel = React.useCallback(() => {
    parent.postMessage({ pluginMessage: { type: 'CANCEL' } }, '*');
  }, []);

  const handleCategoryChange = React.useCallback((ev: React.ChangeEvent<HTMLInputElement>) => {
    if (ev.target.checked) {
      setSelectedCategories((prev) => new Set(prev).add(ev.target.value));
    } else {
      setSelectedCategories((prev) => {
        const next = new Set(prev);
        next.delete(ev.target.value);
        return next;
      });
    }
  }, []);

  React.useEffect(() => {
    const { width, height } = document.body.getBoundingClientRect();
    parent.postMessage(
      {
        pluginMessage: {
          type: 'RESIZE',
          payload: { width, height },
        },
      },
      '*',
    );
  });

  return (
    <React.Fragment>
      <p className="type type--small">
        This plugin allows you to import JSON files generated by{' '}
        <a className="link" href="https://amzn.github.io/style-dictionary">
          Style Dictionary
        </a>
        .
      </p>
      <form className="form" onSubmit={handleSubmit}>
        <fieldset className="fieldset">
          <legend className="section-title">Token Upload</legend>
          <input
            type="file"
            ref={inputRef}
            onChange={handleChangeFile}
            accept=".json"
            id="jsonFile"
            hidden
          />
          <div>
            <p className="type type--small">First select a JSON file to import tokens from:</p>
            {jsonFile && (
              <div className="file-upload-status">
                <span>
                  <span className="icon icon--check icon--inline" />
                  <span className="type type--small">{fileName}</span>
                </span>
                <button
                  type="button"
                  className="button button--secondary"
                  onClick={handleClearFile}
                >
                  Clear
                </button>
              </div>
            )}
            {!jsonFile && (
              <div className="button-group">
                <>
                  <button type="button" className="button button--secondary" onClick={handleCancel}>
                    Cancel
                  </button>

                  <button type="button" className="button button--primary" onClick={handleUpload}>
                    Upload JSONâ€¦
                  </button>
                </>
              </div>
            )}
          </div>
        </fieldset>

        {jsonFile && (
          <>
            <fieldset className="fieldset">
              <legend className="section-title">Categories</legend>
              <p className="type type--small">Choose which categories to import:</p>
              {Object.keys(jsonFile).map((item) => (
                <div key={item + '-wrapper'} className="switch">
                  <input
                    name="category"
                    key={item + '-input'}
                    type="checkbox"
                    className="switch__toggle"
                    value={item}
                    data-test={selectedCategories.has(item)}
                    id={item}
                    checked={selectedCategories.has(item)}
                    onChange={handleCategoryChange}
                  />
                  <label key={item + '-label'} className="switch__label" htmlFor={item}>
                    {item}
                  </label>
                </div>
              ))}
            </fieldset>
            <div className="button-group">
              <button type="button" className="button button--secondary" onClick={handleCancel}>
                Cancel
              </button>
              <button type="submit" className="button button--primary" disabled={!submitEnabled}>
                Import
              </button>
            </div>
          </>
        )}
      </form>
    </React.Fragment>
  );
};

ReactDOM.render(<App />, rootElement);
